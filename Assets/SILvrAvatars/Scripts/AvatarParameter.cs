using System.Collections;
using System.Collections.Generic;
using UnityEngine;
#if UNITY_EDITOR
using UnityEditor;
#endif

namespace SILvr.Avatars
{
    [System.Serializable]
    public class AvatarParameter : ScriptableObject
    {
        public int min;
        public int max;

        // Creates and saves the parameter
        public static AvatarParameter Create(Kit kit, string name, int min, int max)
        {
            // Create the parameter
            AvatarParameter parameter = CreateInstance<AvatarParameter>();
            parameter.name = name;
            parameter.min = min;
            parameter.max = max;

            // Save the parameter
            parameter = Save(kit, parameter);

            // Return the parameter
            return parameter;
        }

        // Saves the given parameter under the folder for the given kit
        protected static T Save<T>(Kit kit, T parameter) where T : AvatarParameter
        {
            T savedParameter = parameter;
#if UNITY_EDITOR
            string directory = "/SILvrAvatars/ScriptableObjects/AvatarParameters/" + kit.name;
            System.IO.Directory.CreateDirectory(Application.dataPath + directory);
            string path = "Assets" + directory + "/" + parameter.name.Replace(":", "-") + ".asset";
            AssetDatabase.CreateAsset(parameter, path);
            AssetDatabase.Refresh();
            savedParameter = (T)AssetDatabase.LoadAssetAtPath(path, typeof(T));
#endif
            return savedParameter;
        }


        // Apply parameter to the given avatar, using the given value
        public void Apply(SILvrAvatar avatar, int value)
        {
            ApplyUnclamped(avatar, Mathf.Clamp(value, min, max));
        }

        public virtual void ApplyUnclamped(SILvrAvatar avatar, int value)
        {
        }
    }

#if UNITY_EDITOR
    [CustomEditor(typeof(AvatarParameter), true)]
    public class AvatarParameterEditor : Editor
    {
        public override void OnInspectorGUI()
        {
            serializedObject.Update();

            EditorGUILayout.HelpBox("This avatar parameter object was autogenerated by the corresponding kit, and should not be edited manually.", MessageType.Warning);

            serializedObject.ApplyModifiedProperties();
        }
    }
#endif
}
